NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                       7:0    0 63,9M  1 loop /snap/core20/2105
loop1                       7:1    0 63,7M  1 loop /snap/core20/2496
loop2                       7:2    0   87M  1 loop /snap/lxd/27037
loop3                       7:3    0 89,4M  1 loop /snap/lxd/31333
loop4                       7:4    0 40,4M  1 loop /snap/snapd/20671
sda                         8:0    0   25G  0 disk 
├─sda1                      8:1    0    1M  0 part 
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0   23G  0 part 
  └─ubuntu--vg-ubuntu--lv 253:0    0 11,5G  0 lvm  /
sr0                        11:0    1 1024M  0 rom  











root@servidor1:/home/uendle# fdisk
fdisk: bad usage
Try 'fdisk --help' for more information.
root@servidor1:/home/uendle# fdisk -l
Disk /dev/loop0: 63,91 MiB, 67014656 bytes, 130888 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop1: 63,75 MiB, 66842624 bytes, 130552 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop2: 86,99 MiB, 91213824 bytes, 178152 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop3: 89,4 MiB, 93745152 bytes, 183096 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop4: 40,43 MiB, 42393600 bytes, 82800 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/sda: 25 GiB, 26843545600 bytes, 52428800 sectors
Disk model: VBOX HARDDISK   
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: C6E90F01-AF09-44E3-BD33-0F7698C25AAC

Device       Start      End  Sectors Size Type
/dev/sda1     2048     4095     2048   1M BIOS boot
/dev/sda2     4096  4198399  4194304   2G Linux filesystem
/dev/sda3  4198400 52426751 48228352  23G Linux filesystem


Disk /dev/mapper/ubuntu--vg-ubuntu--lv: 11,5 GiB, 12343836672 bytes, 24109056 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
root@servidor1:/home/uendle# 








uendle@servidor1:~$ lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                       7:0    0 40,4M  1 loop /snap/snapd/20671
loop1                       7:1    0 63,7M  1 loop /snap/core20/2496
loop2                       7:2    0 63,9M  1 loop /snap/core20/2105
loop3                       7:3    0   87M  1 loop /snap/lxd/27037
loop4                       7:4    0 89,4M  1 loop /snap/lxd/31333
sda                         8:0    0   25G  0 disk 
├─sda1                      8:1    0    1M  0 part 
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0   23G  0 part 
  └─ubuntu--vg-ubuntu--lv 253:0    0 11,5G  0 lvm  /
sdb                         8:16   0   10G  0 disk 
sr0                        11:0    1 1024M  0 rom  


root@servidor1:/home/uendle# fdisk -l
Disk /dev/loop0: 40,43 MiB, 42393600 bytes, 82800 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop1: 63,75 MiB, 66842624 bytes, 130552 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop2: 63,91 MiB, 67014656 bytes, 130888 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop3: 86,99 MiB, 91213824 bytes, 178152 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop4: 89,4 MiB, 93745152 bytes, 183096 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/sda: 25 GiB, 26843545600 bytes, 52428800 sectors
Disk model: VBOX HARDDISK   
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: C6E90F01-AF09-44E3-BD33-0F7698C25AAC

Device       Start      End  Sectors Size Type
/dev/sda1     2048     4095     2048   1M BIOS boot
/dev/sda2     4096  4198399  4194304   2G Linux filesystem
/dev/sda3  4198400 52426751 48228352  23G Linux filesystem


Disk /dev/sdb: 10 GiB, 10737418240 bytes, 20971520 sectors
Disk model: VBOX HARDDISK   
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/mapper/ubuntu--vg-ubuntu--lv: 11,5 GiB, 12343836672 bytes, 24109056 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes









root@servidor1:/home/uendle# fdisk /dev/sdb

Welcome to fdisk (util-linux 2.37.2).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table.
Created a new DOS disklabel with disk identifier 0xa55aab29.

Command (m for help): m

Help:

  DOS (MBR)
   a   toggle a bootable flag
   b   edit nested BSD disklabel
   c   toggle the dos compatibility flag

  Generic
   d   delete a partition
   F   list free unpartitioned space
   l   list known partition types
   n   add a new partition
   p   print the partition table
   t   change a partition type
   v   verify the partition table
   i   print information about a partition

  Misc
   m   print this menu
   u   change display/entry units
   x   extra functionality (experts only)

  Script
   I   load disk layout from sfdisk script file
   O   dump disk layout to sfdisk script file

  Save & Exit
   w   write table to disk and exit
   q   quit without saving changes

  Create a new label
   g   create a new empty GPT partition table
   G   create a new empty SGI (IRIX) partition table
   o   create a new empty DOS partition table
   s   create a new empty Sun partition table


Command (m for help): n
Partition type
   p   primary (0 primary, 0 extended, 4 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-20971519, default 2048): 
Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-20971519, default 20971519): 

Created a new partition 1 of type 'Linux' and of size 10 GiB.

Command (m for help): w
The partition table has been altered.
Calling ioctl() to re-read partition table.
Syncing disks.











root@servidor1:/home/uendle# mkfs.ext4 /dev/sd
sda   sda1  sda2  sda3  sdb   sdb1  
root@servidor1:/home/uendle# mkfs.ext4 /dev/sdb
mke2fs 1.46.5 (30-Dec-2021)
Found a dos partition table in /dev/sdb
Proceed anyway? (y,N) y
Creating filesystem with 2621440 4k blocks and 655360 inodes
Filesystem UUID: 4f334914-d73f-452b-b456-c695fa59c7c4
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done 

root@servidor1:/home/uendle#





root@servidor1:/mnt# mkdir disco2
root@servidor1:/mnt# ls
disco2
root@servidor1:/mnt# mount /dev/sdb /mnt/disco2/
root@servidor1:/mnt# ls disco2/
lost+found




root@servidor1:/mnt# cd disco2/
root@servidor1:/mnt/disco2# mkdir pasta
root@servidor1:/mnt/disco2# touch pasta/arquivo.txt
root@servidor1:/mnt/disco2# ls -l  pasta/
total 0
-rw-r--r-- 1 root root 0 mar 21 04:05 arquivo.txt







root@servidor1:/mnt/disco2# cd ..
root@servidor1:/mnt# umount /dev/sdb
root@servidor1:/mnt# ls disco2/
root@servidor1:/mnt# ls -l disco2/
total 0





root@servidor1:/mnt# mount /dev/sdb /mnt/disco2/
root@servidor1:/mnt# ls -l disco2/
total 20
drwx------ 2 root root 16384 mar 21 03:56 lost+found
drwxr-xr-x 2 root root  4096 mar 21 04:05 pasta
root@servidor1:/mnt# 





root@servidor1:/mnt# ls -l disco2/
total 0
root@servidor1:/mnt# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                       7:0    0 40,4M  1 loop /snap/snapd/20671
loop1                       7:1    0 63,7M  1 loop /snap/core20/2496
loop2                       7:2    0 63,9M  1 loop /snap/core20/2105
loop3                       7:3    0   87M  1 loop /snap/lxd/27037
loop4                       7:4    0 89,4M  1 loop /snap/lxd/31333
sda                         8:0    0   25G  0 disk 
├─sda1                      8:1    0    1M  0 part 
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0   23G  0 part 
  └─ubuntu--vg-ubuntu--lv 253:0    0 11,5G  0 lvm  /
sdb                         8:16   0   10G  0 disk 
sr0                        11:0    1 1024M  0 rom  
root@servidor1:/mnt# nano /etc/fstab

# /etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
# / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation
/dev/disk/by-id/dm-uuid-LVM-1tmjie2EMkIjFuDiPdk03ajMn08NQJsx79t07TBbwFW1r472nw7hAwUEJOCVsnR1 / ext4 defaults 0 1
# /boot was on /dev/sda2 during curtin installation
/dev/disk/by-uuid/d66a634f-7dfd-4df6-9676-ce0484c3f507 /boot ext4 defaults 0 1
/swap.img       none    swap    sw      0       0

/dev/sdb /mnt/disco2/ ext4 defaults 0 0 #adicone endereco , onde,tipo,montagem,0,0 
root@servidor1:/mnt# reboot






